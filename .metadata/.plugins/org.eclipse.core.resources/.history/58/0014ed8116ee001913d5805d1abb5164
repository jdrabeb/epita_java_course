package fr.epita.quiz.datamodel;

import java.util.ArrayList;
import java.util.List;

import javax.inject.Inject;

import org.hibernate.Session;
import org.hibernate.SessionFactory;

public class DAO<T> {
	
	@Inject
	SessionFactory sessionFactory;
	
	public void create (T t)
	{
		Session session = getSession();
		session.save(t);
	}
	
	private Session getSession()
	{
		Session session = null;
		try {
			session = sessionFactory.getCurrentSession();
		} catch (Exception e)
		{
			session = sessionFactory.openSession();
		}
		return session;
	}
	
	public void update(int id, T newT)
	{
		Session session = getSession();
		T t = session.get(Class<T>, id);
		question.setQuestionContent(newQuestion.getQuestionContent());
		session.update(question);
	}
	
	public void testDelete() {
		//given sessionFactory
		String questionContent = "How to define a property in a maven pom file?";
		Question question = new Question(questionContent);
		Session session = sessionFactory.openSession();
		session.save(question);
		
		//when
		session.delete(question);
		//then
		Question retrievedQuestion = session.get(Question.class, question.getId());
		}

	public void testSearch() {
		//given sessionFactory
		String questionContent = "How to define a property in a maven pom file?";
		
		Question question = new Question(questionContent);
		Session session = sessionFactory.openSession();
		session.save(question);
		
		//when
		org.hibernate.query.Query<Question> query = session.createQuery("from Question q where q.questionContent like :pContent", Question.class);
		query.setParameter("pContent", "%maven%");
		List<Question> results = query.getResultList();
		
		//then
		List<String> notContainingMaven = new ArrayList<>();
		results.stream().forEach(q -> {
			if (q.getQuestionContent().contains("maven")){
				notContainingMaven.add("");
			}
		});
		}

}
